// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	multipart "mime/multipart"

	mock "github.com/stretchr/testify/mock"
)

// ImageService is an autogenerated mock type for the ImageService type
type ImageService struct {
	mock.Mock
}

// Add provides a mock function with given fields: token, campID, header
func (_m *ImageService) Add(token interface{}, campID uint, header *multipart.FileHeader) error {
	ret := _m.Called(token, campID, header)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, uint, *multipart.FileHeader) error); ok {
		r0 = rf(token, campID, header)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: token, imageID
func (_m *ImageService) Delete(token interface{}, imageID uint) error {
	ret := _m.Called(token, imageID)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, uint) error); ok {
		r0 = rf(token, imageID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: token, imageID, header
func (_m *ImageService) Update(token interface{}, imageID uint, header *multipart.FileHeader) error {
	ret := _m.Called(token, imageID, header)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, uint, *multipart.FileHeader) error); ok {
		r0 = rf(token, imageID, header)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewImageService interface {
	mock.TestingT
	Cleanup(func())
}

// NewImageService creates a new instance of ImageService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewImageService(t mockConstructorTestingTNewImageService) *ImageService {
	mock := &ImageService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
