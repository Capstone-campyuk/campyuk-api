openapi: 3.0.0
servers:
    # Added by API Auto Mocking Plugin
    - description: SwaggerHub API Auto Mocking
      url: https://virtserver.swaggerhub.com/GRIFFINHENRY07_1/campyuk/1.0.0
info:
    version: "1.0.0"
    title: Campyuk App Project
    description: The API for campyuk app project
tags:
    - name: auth
    - name: users
    - name: camps
    - name: items
    - name: bookings
paths:
    /register:
        post:
            tags:
                - auth
            description: feature for user registration
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                fullname:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
                                role:
                                    type: string
                        example:
                            username: "griffin"
                            fullname: "griffinhenry"
                            email: "grf@gmail.com"
                            password: "g123"
                            role: "user"
            responses:
                201:
                    description: "success insert data"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: "success create account"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"

    /login:
        post:
            tags:
                - auth
            description: feature for verifying who a user is
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
                                    format: password
                            example:
                                username: "grf@gmail.com"
                                password: "g123"
            responses:
                200:
                    description: "success login"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/responseObject"
                            example:
                                data:
                                    id: 1
                                    username: "griffin"
                                    fullname: "griffinhenry"
                                    email: "grf@gmail.com"
                                    role: "user"
                                message: "success login"
                                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJ1c2VySUQiOjR9.QTZxERh4CwC_UnL_eJvTi_A_qdLeBZ-IjR4nqoxjodk"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"

    /users:
        get:
            tags:
                - users
            summary: get data user
            description: getting data user
            security:
                - JWTAuth: []
            responses:
                200:
                    description: success show profile
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data:
                                        id: 2
                                        username: "griffin"
                                        fullname: "griffinhenry"
                                        email: "grf@gmail.com"
                                        user_image: "https://res.cloudinary.com/dbg0177wd/image/upload/v1673881607/go-cloudinary/llhltxp55elirjkmlyld.png"
                                    message: "success show profile"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"
        put:
            tags:
                - users
            summary: update profile
            description: update user profile
            security:
                - JWTAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                fullname:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
                        example:
                            name: "griffin"
                            fullname: "griffinhenry"
                            email: "grf@gmail.com"
                            password: "123"
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                        example:
                            user_image: "https://ijs2nfub0s2u0831.png"
            responses:
                200:
                    description: update success
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                message: "success update profile"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"
        delete:
            tags:
                - users
            summary: delete data user
            description: delete data from user
            security:
                - JWTAuth: []
            responses:
                200:
                    description: deleted user success
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: "success delete profile"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"

    /camps:
        post:
            tags:
                - "camps"
            summary: Add new camp (host)
            description: Get all list camp
            security:
                - JWTAuth: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                host_id:
                                    type: integer
                                title:
                                    type: string
                                price:
                                    type: integer
                                description:
                                    type: string
                                    format: longtext
                                latitude:
                                    type: integer
                                    format: double
                                longitude:
                                    type: number
                                    format: double
                                address:
                                    type: string
                                city:
                                    type: string
                                distance:
                                    type: integer
                                images:
                                    type: array
                                    items:
                                        type: string
                                        format: binary
                                document:
                                    type: string
                                    format: binary
                        example:
                            host_id: 1
                            title: Danau toba
                            price: 100000
                            description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi molestie tempus purus, at tristique justo vehicula id.
                            latitude: -6.208987101998694
                            longitude: 106.79970296358913
                            address: Jl. Spartan No.IV, Gotham city, West Java, 53241 +62 985904
                            city: Gotham city
                            distance: 100
                            images:
                                - image.jpg
                                - image.jpg
                                - image.jpg
                            document: dokumen-usaha.pdf
            responses:
                201:
                    description: success add new camp
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: success add new camp
                400:
                    $ref: "#/components/responses/400"
                401:
                    description: unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: access is denied due to invalid credential
                500:
                    $ref: "#/components/responses/500"
        get:
            tags:
                - "camps"
            summary: Get all list camp (guest/users/host/admin)
            description: Get all list camp
            security:
                - JWTAuth: []
            responses:
                200:
                    description: success add new camp
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    pagination:
                                        type: object
                                    data:
                                        type: array
                                        items:
                                            type: object
                                    message:
                                        type: string
                            example:
                                pagination:
                                    page: 1
                                    limit: 8
                                    offset: 0
                                    total_record: 8
                                    total_pages: 1
                                data:
                                    - id: 1
                                      verification_status: accepted
                                      host_name: john
                                      title: Tanakita Camp
                                      price: 100000
                                      city: Gotham City
                                      distance: 100
                                      image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.pikiran-rakyat.com%2Fcrop%2F0x0%3A0x0%2Fx%2Fphoto%2F2020%2F04%2F04%2F2309824160.jpg&f=1&nofb=1&ipt=40c1a6e95ad3ea4a52e83708d27385d1436ef54e77c3afb84623998a0120f9eb&ipo=images
                                    - id: 2
                                      verification_status: accepted
                                      host_name: doe
                                      title: Tanakita Camp
                                      price: 100000
                                      city: Gotham City
                                      distance: 100
                                      image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.pikiran-rakyat.com%2Fcrop%2F0x0%3A0x0%2Fx%2Fphoto%2F2020%2F04%2F04%2F2309824160.jpg&f=1&nofb=1&ipt=40c1a6e95ad3ea4a52e83708d27385d1436ef54e77c3afb84623998a0120f9eb&ipo=images
                                    - id: 3
                                      verification_status: accepted
                                      host_name: doe
                                      title: Tanakita Camp
                                      price: 100000
                                      city: Gotham City
                                      distance: 100
                                      image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.pikiran-rakyat.com%2Fcrop%2F0x0%3A0x0%2Fx%2Fphoto%2F2020%2F04%2F04%2F2309824160.jpg&f=1&nofb=1&ipt=40c1a6e95ad3ea4a52e83708d27385d1436ef54e77c3afb84623998a0120f9eb&ipo=images
                                    - id: 4
                                      verification_status: accepted
                                      host_name: john
                                      title: Tanakita Camp
                                      price: 100000
                                      city: Gotham City
                                      distance: 100
                                      image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.pikiran-rakyat.com%2Fcrop%2F0x0%3A0x0%2Fx%2Fphoto%2F2020%2F04%2F04%2F2309824160.jpg&f=1&nofb=1&ipt=40c1a6e95ad3ea4a52e83708d27385d1436ef54e77c3afb84623998a0120f9eb&ipo=images
                                    - id: 5
                                      verification_status: accepted
                                      host_name: doe
                                      title: Tanakita Camp
                                      price: 100000
                                      city: Gotham City
                                      distance: 100
                                      image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.pikiran-rakyat.com%2Fcrop%2F0x0%3A0x0%2Fx%2Fphoto%2F2020%2F04%2F04%2F2309824160.jpg&f=1&nofb=1&ipt=40c1a6e95ad3ea4a52e83708d27385d1436ef54e77c3afb84623998a0120f9eb&ipo=images
                                    - id: 6
                                      verification_status: accepted
                                      host_name: doe
                                      title: Tanakita Camp
                                      price: 100000
                                      city: Gotham City
                                      distance: 100
                                      image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.pikiran-rakyat.com%2Fcrop%2F0x0%3A0x0%2Fx%2Fphoto%2F2020%2F04%2F04%2F2309824160.jpg&f=1&nofb=1&ipt=40c1a6e95ad3ea4a52e83708d27385d1436ef54e77c3afb84623998a0120f9eb&ipo=images
                                    - id: 7
                                      verification_status: accepted
                                      host_name: doe
                                      title: Tanakita Camp
                                      price: 100000
                                      city: Gotham City
                                      distance: 100
                                      image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.pikiran-rakyat.com%2Fcrop%2F0x0%3A0x0%2Fx%2Fphoto%2F2020%2F04%2F04%2F2309824160.jpg&f=1&nofb=1&ipt=40c1a6e95ad3ea4a52e83708d27385d1436ef54e77c3afb84623998a0120f9eb&ipo=images
                                    - id: 8
                                      verification_status: accepted
                                      host_name: doe
                                      title: Tanakita Camp
                                      price: 100000
                                      city: Gotham City
                                      distance: 100
                                      image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.pikiran-rakyat.com%2Fcrop%2F0x0%3A0x0%2Fx%2Fphoto%2F2020%2F04%2F04%2F2309824160.jpg&f=1&nofb=1&ipt=40c1a6e95ad3ea4a52e83708d27385d1436ef54e77c3afb84623998a0120f9eb&ipo=images
                                message: success show list camp
                401:
                    description: unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: access is denied due to invalid credential
                500:
                    $ref: "#/components/responses/500"
    /camps/{id}:
        get:
            tags:
                - "camps"
            summary: Detail camp (guest/user/host/admin)
            description: Get detail camp
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: success update camp
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: integer
                                            verification_status:
                                                type: string
                                            host_name:
                                                type: string
                                            title:
                                                type: string
                                            price:
                                                type: integer
                                            latitude:
                                                type: number
                                                format: double
                                            longitude:
                                                type: number
                                                format: double
                                            address:
                                                type: string
                                            distance:
                                                type: integer
                                            description:
                                                type: string
                                            images:
                                                type: array
                                                items:
                                                    type: string
                                            items:
                                                type: array
                                                items:
                                                    type: object
                                    message:
                                        type: string
                            example:
                                data:
                                    id: 1
                                    verification_status: ACCEPTED
                                    host_name: john
                                    title: Tanakita Camp
                                    price: 100000
                                    description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi molestie tempus purus, at tristique justo vehicula id.
                                    latitude: -6.208987101998694
                                    longitude: 106.79970296358913
                                    address: Jl. Spartan No.IV, Gotham city, West Java, 53241 +62 985904
                                    city: Gotham city
                                    distance: 100
                                    images:
                                        - https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.pikiran-rakyat.com%2Fcrop%2F0x0%3A0x0%2Fx%2Fphoto%2F2020%2F04%2F04%2F2309824160.jpg&f=1&nofb=1&ipt=40c1a6e95ad3ea4a52e83708d27385d1436ef54e77c3afb84623998a0120f9eb&ipo=images
                                        - https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fdisplay.ub.ac.id%2Fwp-content%2Fuploads%2F2021%2F05%2F055886600_1526867328-20180520-Refleksi-20-Tahun-Reformasi-dalam-Jepretan-Kamera-AFP-1-1024x591.png&f=1&nofb=1&ipt=0255ab3e0e0ec03987a0d34de8ce3fa8a130a0262b5af32372607cb2846334ae&ipo=images
                                        - https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn-2.tstatic.net%2Fmanado%2Ffoto%2Fbank%2Fimages%2Fkeadaan-gorden-yang-ada-di-rumah-jabatan-ketua-fraksi-pks-dpr-ri.jpg&f=1&nofb=1&ipt=3844fa3e62210b13ca63ee6d62a2ca2c3f2049ef1a612556dfbf2fa2c6926e94&ipo=images
                                    items:
                                        - item_id: 1
                                          name: tent small
                                          stock: 10
                                          rent_price: 100000
                                          item_image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn-2.tstatic.net%2Fmanado%2Ffoto%2Fbank%2Fimages%2Fkeadaan-gorden-yang-ada-di-rumah-jabatan-ketua-fraksi-pks-dpr-ri.jpg&f=1&nofb=1&ipt=3844fa3e62210b13ca63ee6d62a2ca2c3f2049ef1a612556dfbf2fa2c6926e94&ipo=images
                                        - item_id: 2
                                          name: bonfire
                                          stock: 1
                                          rent_price: 200000
                                          item_image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn-2.tstatic.net%2Fmanado%2Ffoto%2Fbank%2Fimages%2Fkeadaan-gorden-yang-ada-di-rumah-jabatan-ketua-fraksi-pks-dpr-ri.jpg&f=1&nofb=1&ipt=3844fa3e62210b13ca63ee6d62a2ca2c3f2049ef1a612556dfbf2fa2c6926e94&ipo=images
                                        - item_id: 3
                                          name: sleepingbag
                                          stock: 3
                                          rent_price: 300000
                                          item_image: https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn-2.tstatic.net%2Fmanado%2Ffoto%2Fbank%2Fimages%2Fkeadaan-gorden-yang-ada-di-rumah-jabatan-ketua-fraksi-pks-dpr-ri.jpg&f=1&nofb=1&ipt=3844fa3e62210b13ca63ee6d62a2ca2c3f2049ef1a612556dfbf2fa2c6926e94&ipo=images
                                message: success show detail camp
                401:
                    description: unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: access is denied due to invalid credential
                404:
                    description: data not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: data camp not found
                500:
                    $ref: "#/components/responses/500"
        put:
            tags:
                - "camps"
            summary: Add new camp (host)
            description: Get all list camp
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                host_id:
                                    type: integer
                                title:
                                    type: string
                                price:
                                    type: integer
                                description:
                                    type: string
                                    format: longtext
                                latitude:
                                    type: integer
                                    format: double
                                longitude:
                                    type: number
                                    format: double
                                address:
                                    type: string
                                city:
                                    type: string
                                distance:
                                    type: integer
                                images:
                                    type: array
                                    items:
                                        type: string
                                        format: binary
                                document:
                                    type: string
                                    format: binary
                        example:
                            host_id: 1
                            title: Tanakita Camp
                            price: 100000
                            description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi molestie tempus purus, at tristique justo vehicula id.
                            latitude: -6.208987101998694
                            longitude: 106.79970296358913
                            address: Jl. Spartan No.IV, Gotham city, West Java, 53241 +62 985904
                            city: Gotham city
                            distance: 100
                            images:
                                - image.jpg
                                - image.jpg
                                - image.jpg
                            document: dokumen-usaha.pdf
            responses:
                200:
                    description: success update camp
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: success update camp
                400:
                    $ref: "#/components/responses/400"
                401:
                    description: unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: access is denied due to invalid credential
                404:
                    description: data not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: data camp not found
                500:
                    $ref: "#/components/responses/500"
        delete:
            tags:
                - "camps"
            summary: Delete camp (host)
            description: Delete camp
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: success delete camp
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: success delete camp
                401:
                    description: unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: access is denied due to invalid credential
                404:
                    description: data not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: data camp not found
                500:
                    description: internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: internal server error
    /camps/{id}/accept:
        put:
            tags:
                - "camps"
            summary: Accept camp request from host (admin)
            description: Delete camp
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: success accept camp request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: success accept camp request
                401:
                    description: unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: access is denied due to invalid credential
                404:
                    description: data not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: data camp not found
                500:
                    $ref: "#/components/responses/500"
    /camps/{id}/decline:
        put:
            tags:
                - "camps"
            summary: decline camp request from host (admin)
            description: Delete camp
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: success decline camp request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: success decline camp request
                401:
                    description: unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: access is denied due to invalid credential
                404:
                    description: data not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: data camp not found
                500:
                    $ref: "#/components/responses/500"

    /items:
        post:
            tags:
                - items
            summary: "by host"
            description: add items by host
            security:
                - JWTAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                camp_id:
                                    type: integer
                                name:
                                    type: string
                                stock:
                                    type: string
                                price:
                                    type: integer
                                image:
                                    type: string
                        example:
                            camp_id: 1
                            name: tent small
                            stock: 5
                            price: 5
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                        example:
                            image: "https://dhywgdyhdy98127d.jpg"
            responses:
                201:
                    description: "success insert data"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: "success add new item"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"

    /items/{id}:
        put:
            tags:
                - items
            summary: "by host"
            description: edit items by host
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  description: item_id
                  required: true
                  in: path
                  schema:
                      type: string
                      example: 1
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                stock:
                                    type: string
                                price:
                                    type: integer
                                image:
                                    type: string
                        example:
                            name: tent small
                            stock: 10
                            price: 10
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                        example:
                            image: "https://ndusigyin1.jpg"
            responses:
                200:
                    description: update success
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                message: "success update items"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"
        delete:
            tags:
                - items
            summary: by host
            description: delete data from items
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  description: item_id
                  required: true
                  in: path
                  schema:
                      type: string
                      example: 1
            responses:
                200:
                    description: deleted item success
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: "success delete item"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"

    /bookings:
        post:
            tags:
                - bookings
            summary: by user
            description: add booking for user
            security:
                - JWTAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                camp_id:
                                    type: integer
                                items:
                                    type: array
                                    items:
                                        type: object
                                quantity:
                                    type: integer
                                check_in:
                                    type: string
                                check_out:
                                    type: string
                                guest:
                                    type: integer
                                bank:
                                    type: string
                        example:
                            camp_id: 1
                            items:
                                - item_id: 1
                                  quantity: 2
                                  rent_cost: 200000
                                - item_id: 2
                                  quantity: 1
                                  rent_cost: 200000
                                - item_id: 3
                                  quantity: 1
                                  rent_cost: 300000
                            camp_cost: 50000
                            total_price: 750000
                            check_in: 01-02-2023
                            check_out: 02-02-2023
                            guest: 2
                            bank: bca
            responses:
                201:
                    description: "success insert data"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                data:
                                    booking_id: 1
                                message: "success booking"
        get:
            tags:
                - bookings
            summary: by user & host
            description: get booking data for user
            security:
                - JWTAuth: []
            responses:
                200:
                    description: "success show booking"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                pagination:
                                    page: 1
                                    limit: 10
                                    offset: 0
                                    total_record: 2
                                    total_pages: 1
                                data:
                                    [
                                        {
                                            id: 1,
                                            ticket: ACT-34799-XVII-MMDKJF,
                                            camp_title: tanakita,
                                            camp_image: "https://app.s9dh712hunsd1.jpg",
                                            camp_location: sukabumi,
                                            check_in: "01-02-2023",
                                            check_out: "02-02-2023",
                                            status: "pending",
                                            booking_date: "01-02-2023",
                                            total_price: 100,
                                        },
                                        {
                                            id: 2,
                                            ticket: ABC-27883-XVII-KKDTC,
                                            camp_title: tanakita,
                                            camp_image: "https://app.nd8nd871y2ss.jpg",
                                            camp_location: sukabumi,
                                            check_in: "01-02-2023",
                                            check_out: "03-02-2023",
                                            status: "pending",
                                            booking_date: "01-02-2023",
                                            total_price: 200,
                                        },
                                    ]
                                message: "show all transaction success"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"

    # /bookings/payment:
    #     get:
    #         tags:
    #             - bookings
    #         summary: by user
    #         description: get payment method
    #         security:
    #             - JWTAuth: []
    #         responses:
    #             200:
    #                 description: "success show booking"
    #                 content:
    #                     application/json:
    #                         schema:
    #                             type: object
    #                             properties:
    #                                 data:
    #                                     type: object
    #                                     properties:
    #                                         total_price:
    #                                             type: integer
    #                                         bank:
    #                                             type: string
    #                                         va_number:
    #                                             type: string
    #                                 message:
    #                                     type: string
    #                         example:
    #                             data:
    #                                 total_price: 10000
    #                                 bank: bca
    #                                 virtual_number: "9231767841"
    #                             message: success bank transfer transaction is created
    #             400:
    #                 $ref: "#/components/responses/400"
    #             500:
    #                 $ref: "#/components/responses/500"

    /bookings/{id}:
        get:
            tags:
                - bookings
            summary: "by user & host"
            description: get detail booking
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  description: booking_id
                  required: true
                  in: path
                  schema:
                      type: string
                      example: 1
            responses:
                200:
                    description: "success show booking"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                data:
                                    id: 1
                                    ticket: ACT-34799-XVII-MMDKJF
                                    camp_title: tanakita
                                    camp_image: "https://app.s9dh712hunsd1.jpg"
                                    camp_location: sukabumi
                                    camp_price: 20000
                                    check_in: "01-02-2023"
                                    check_out: "02-02-2023"
                                    guest: 2
                                    camp_cost: 500000
                                    items:
                                        - item_id: 1
                                          name: Tent small
                                          price: 100000
                                          quantity: 2
                                          rent_cost: 200000
                                        - item_id: 2
                                          name: Sleeping bag
                                          price: 200000
                                          quantity: 2
                                          rent_cost: 400000
                                    total_price: 100000
                                    booking_date: "01-02-2023"
                                    bank: "bca"
                                    virtual_number: "4716239019741"
                                    status: "pending"
                                message: "success show detail booking"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"

    /bookings/{id}/accept:
        put:
            tags:
                - bookings
            summary: "by host"
            description: update status booking
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  description: booking_id
                  required: true
                  in: path
                  schema:
                      type: string
                      example: 1
            responses:
                200:
                    description: update success
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                message: "success accept booking"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"

    /bookings/{id}/cancel:
        put:
            tags:
                - bookings
            summary: "by user & host"
            description: update status booking
            security:
                - JWTAuth: []
            parameters:
                - name: id
                  description: booking_id
                  required: true
                  in: path
                  schema:
                      type: string
                      example: 1
            responses:
                200:
                    description: update success
                    content:
                        application/json:
                            schema:
                                type: object
                            example:
                                message: "success cancel booking"
                400:
                    $ref: "#/components/responses/400"
                500:
                    $ref: "#/components/responses/500"

    /bookings/callback:
        post:
            tags:
                - bookings
            summary: by user
            description: add booking for user
            security:
                - JWTAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                order_id:
                                    type: string
                                settlement_time:
                                    type: string
                                transaction_status:
                                    type: string
                        example:
                            order_id: ACT-34799-XVII-MMDKJF
                            settlement_time: "2023-01-30 03:17:20"
                            transaction_status: settlement

            responses:
                200:
                    description: "success insert data"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                            example:
                                message: "success update transaction"

components:
    securitySchemes:
        JWTAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
            description: "user token"
    schemas:
        responseObject:
            type: object
            properties:
                data:
                    type: object
                message:
                    type: string
        # responseObjectArr:
        # type: object
        # properties:
        #     data:
        #         type: array
        #         items:
        #             type: object
        #     message:
        #         type: string
    responses:
        400:
            description: "error from user"
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                    example:
                        message: "bad request"
        500:
            description: "error from server"
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                    example:
                        message: "internal server error"
